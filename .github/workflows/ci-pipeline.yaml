name: CI - Kind Local K8S Demo

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  kind-cluster:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Kind + Kubectl
        run: |
          # Install kubectl
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

          # Install Kind
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

          # Verify versions
          kind --version
          kubectl version --client

      - name: Create Kind Cluster
        run: |
          kind create cluster --name ci-pipeline --config ./configs/kind-config.yaml
          kubectl cluster-info

      - name: Create Namespaces for kafka and montoring
        run: |
         kubectl apply -f namespace/namespace.yaml
         kubectl wait --for=condition=Established namespace/kafka --timeout=30s
         kubectl wait --for=condition=Established namespace/monitoring --timeout=30s

      - name: Deploy Kafka and Monitoring
        run: |
          kubectl apply -f kafka/kafka-cluster.yaml
          kubectl apply -f kafka/kafka-exporter.yaml
          kubectl apply -f monitoring/prometheus-deployment.yaml
          kubectl apply -f monitoring/prometheus-service.yaml
          kubectl apply -f monitoring/grafana-deployment.yaml
          kubectl apply -f monitoring/grafana-service.yaml

      - name: Wait for pods to be ready
        run: |
          for i in {1..30}; do
            NOTREADY=$(kubectl get pods -n kafka -o jsonpath='{.items[?(@.status.phase!="Running")].metadata.name}')
            NOTREADY_MON=$(kubectl get pods -n monitoring -o jsonpath='{.items[?(@.status.phase!="Running")].metadata.name}')
            if [[ -z "$NOTREADY" && -z "$NOTREADY_MON" ]]; then
              echo "All pods are running!"
              exit 0
            fi
            echo "Waiting for pods to be ready..."
            sleep 10
          done
          echo "Timeout waiting for pods!"
          kubectl get pods -A
          exit 1

      - name: Verify Kafka
        run: bash tests/verify-kafka.sh

      - name: Verify Prometheus
        run: bash tests/verify-prometheus.sh

      - name: Verify Grafana
        run: bash tests/verify-grafana.sh